name: Build and Push Docker Images

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'simple-nginx/**'
      - 'simple-httpd/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'simple-nginx/**'
      - 'simple-httpd/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_NGINX: ${{ github.repository }}/simple-nginx
  IMAGE_NAME_HTTPD: ${{ github.repository }}/simple-httpd

jobs:
  build-and-push-nginx:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'simple-nginx') || contains(github.event.head_commit.added, 'simple-nginx') || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for NGINX
      id: meta-nginx
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_NGINX }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Build and push NGINX Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./simple-nginx
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-nginx.outputs.tags }}
        labels: ${{ steps.meta-nginx.outputs.labels }}
        build-args: |
          VERSION=${{ github.sha }}
          BUILD_TIME=${{ github.event.head_commit.timestamp }}

  build-and-push-httpd:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'simple-httpd') || contains(github.event.head_commit.added, 'simple-httpd') || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for HTTPD
      id: meta-httpd
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_HTTPD }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Build and push HTTPD Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./simple-httpd
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-httpd.outputs.tags }}
        labels: ${{ steps.meta-httpd.outputs.labels }}
        build-args: |
          VERSION=${{ github.sha }}
          BUILD_TIME=${{ github.event.head_commit.timestamp }}

  update-gitops-manifests:
    needs: [build-and-push-nginx, build-and-push-httpd]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && (needs.build-and-push-nginx.result == 'success' || needs.build-and-push-httpd.result == 'success')
    
    steps:
    - name: Update GitOps Manifests
      run: |
        echo "Updating GitOps repository to trigger ArgoCD sync..."
        
        # Configure git
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        
        # Clone GitOps repository
        git clone https://x-access-token:${{ secrets.GITOPS_REPO_TOKEN }}@github.com/${{ secrets.GITOPS_REPO_OWNER }}/gitops-argocd.git
        cd gitops-argocd
        
        # Update image tags in deployment files
        echo "Updating NGINX image tag to ${{ github.sha }}"
        sed -i "s|image: ghcr.io/.*/simple-nginx:.*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_NGINX }}:${{ github.sha }}|g" k8s/simple-nginx/deployment.yaml
        
        echo "Updating HTTPD image tag to ${{ github.sha }}"
        sed -i "s|image: ghcr.io/.*/simple-httpd:.*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_HTTPD }}:${{ github.sha }}|g" k8s/simple-httpd/deployment.yaml
        
        # Show the changes
        echo "Changes to be committed:"
        git diff
        
        # Commit and push changes
        git add .
        git commit -m "Update image tags to ${{ github.sha }} [skip ci]"
        git push origin main
        
        echo "âœ… GitOps repository updated successfully!"
        echo "ArgoCD will automatically detect changes and sync the applications."
        echo ""
        echo "Updated images:"
        echo "NGINX: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_NGINX }}:${{ github.sha }}"
        echo "HTTPD: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_HTTPD }}:${{ github.sha }}"
